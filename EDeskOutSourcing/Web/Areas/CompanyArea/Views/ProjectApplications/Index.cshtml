@model IEnumerable<ProjectApplications>

@{
    var groupedApplications = Model
        .GroupBy(pa => pa.Project.ProjectName)
        .Select(group => new
        {
            ProjectName = group.Key,
            ApplicationCount = group.Count(),
            ProjectApplicationId = group.First().ProjectApplicationId, // Assuming you want to use the ID of the first application for the actions
            ProjectId =group.First().ProjectId
        })
        .ToList();
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Project Applications List</h5>

        <hr />

        <!-- Bordered Table -->
        <table class="table table-bordered table-responsive">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Project Name</th>
                    <th scope="col">No of Applications</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int srno = 1;
                }
                @foreach (var group in groupedApplications)
                {
                    <tr>
                        <th scope="row">@srno</th>
                        <td>@group.ProjectName</td>
                        <td>@group.ApplicationCount</td>
                        <td>
                            <a class="btn btn-outline-primary" asp-action="ViewAndAssign" asp-route-id="@group.ProjectId">View And Assign</a>
                        </td>
                    </tr>
                    srno++;
                }
            </tbody>
        </table>
        <!-- End Bordered Table -->

    </div>
</div>
